buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
        springPlatformVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'
apply plugin: 'war'

dependencyManagement {
    imports {
        mavenBom "io.spring.platform:platform-bom:${springPlatformVersion}"
    }
    dependencies {
        dependency 'org.projectlombok:lombok:1.16.6'
    }
}

war {
    baseName = 'spring-data-rest-angular-demo'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'org.springframework.data:spring-data-rest-hal-browser'
    compile 'org.springframework.boot:spring-boot-starter-groovy-templates'
    compile 'org.springframework.boot:spring-boot-starter-hateoas'
    compile 'org.projectlombok:lombok'
    compile('commons-dbcp:commons-dbcp') {
        exclude(module: 'commons-logging')
        exclude(module: 'xml-apis')
    }
    compile 'javax.el:javax.el-api'
    runtime 'com.h2database:h2'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
}


eclipse {
    classpath {
        containers.remove 'org.eclipse.jdt.launching.JRE_CONTAINER'
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

task cleanTestJpa(type: Delete) {
    delete fileTree('.') {
        include 'demo-rest.*db'
    }
}

cleanTest.dependsOn cleanTestJpa
